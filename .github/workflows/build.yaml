name: Build, test and release
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-info:
    name: Generate release info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.generate.outputs.version }}
      changelog: ${{ steps.generate.outputs.changelog }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install tooling
        uses: jdx/mise-action@v2
      - name: Generate release info
        id: generate
        run: |
          version="$(git-cliff --bumped-version)"
          echo "version=$version" >>"$GITHUB_OUTPUT"
          echo "Generated version: $version"
          changelog="$(git-cliff -v --tag "$version" --unreleased --strip all)"
          echo "changelog<<EOF" >>"$GITHUB_OUTPUT"
          echo "$changelog" >>"$GITHUB_OUTPUT"
          echo "EOF" >>"$GITHUB_OUTPUT"
          
          if [[ "${{ github.event_name }}" == "pull_request" && -n "$changelog" ]]; then
            echo -n "PR comment with changelog: "
            comment_content="# :pencil: Changelog preview
          Below is a preview of the Changelog that will be added to the next release. \
          Only commit messages that follow the [Conventional Commits specification](https://www.conventionalcommits.org/) will be included in the Changelog.

          $changelog"

            echo -e "$comment_content" | gh pr comment "${{ github.event.number }}" \
              --edit-last --create-if-none \
              --repo "${{ github.repository }}" \
              --body-file=-
          fi
      - name: Print context
        run: git-cliff --context

  tag-and-create-github-release:
    if: github.ref == 'refs/heads/main'
    name: Create new tag and GitHub release
    runs-on: ubuntu-latest
    needs: [release-info]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release-info.outputs.version }}
          body: ${{ needs.release-info.outputs.changelog }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}